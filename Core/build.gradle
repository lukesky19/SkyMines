plugins {
    id("java")
    id("io.github.goooler.shadow") version "8.1.7"
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.3.5" // 1.20.2-1.21
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.11-SNAPSHOT" // 1.21
    compileOnly 'com.onarandombox.multiversecore:multiverse-core:4.3.12'
    compileOnly "net.kyori:adventure-api:4.17.0"
    compileOnly "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "org.spongepowered:configurate-yaml:4.1.2"
    implementation "org.bstats:bstats-bukkit:3.0.2"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set(null)
    relocate('org.spongepowered.configurate', 'com.github.lukesky19.skynodes.libs.configurate')
    relocate('org.bstats', 'com.github.lukesky19.skyshop.libs.bstats')
    minimize()
}

build.dependsOn shadowJar
